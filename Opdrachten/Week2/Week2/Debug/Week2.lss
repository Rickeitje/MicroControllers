
Week2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  00000252  000002e6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000252  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800118  00800118  000002fe  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000330  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  0000036c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a30  00000000  00000000  000003b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ad  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000038e  00000000  00000000  00001691  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000138  00000000  00000000  00001a20  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000441  00000000  00000000  00001b58  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000320  00000000  00000000  00001f99  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000022b9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	72 c0       	rjmp	.+228    	; 0xea <__vector_1>
   6:	00 00       	nop
   8:	b3 c0       	rjmp	.+358    	; 0x170 <__vector_2>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e5       	ldi	r30, 0x52	; 82
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a8 31       	cpi	r26, 0x18	; 24
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a8 e1       	ldi	r26, 0x18	; 24
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	aa 31       	cpi	r26, 0x1A	; 26
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	c2 d0       	rcall	.+388    	; 0x248 <main>
  c4:	c4 c0       	rjmp	.+392    	; 0x24e <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <wait>:
	{
		PORTD = 0b00000000;
		PORTD = Numbers[i];
		wait(500);
	}
}
  c8:	18 16       	cp	r1, r24
  ca:	19 06       	cpc	r1, r25
  cc:	6c f4       	brge	.+26     	; 0xe8 <wait+0x20>
  ce:	20 e0       	ldi	r18, 0x00	; 0
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	ef ec       	ldi	r30, 0xCF	; 207
  d4:	f7 e0       	ldi	r31, 0x07	; 7
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <wait+0xe>
  da:	00 c0       	rjmp	.+0      	; 0xdc <wait+0x14>
  dc:	00 00       	nop
  de:	2f 5f       	subi	r18, 0xFF	; 255
  e0:	3f 4f       	sbci	r19, 0xFF	; 255
  e2:	82 17       	cp	r24, r18
  e4:	93 07       	cpc	r25, r19
  e6:	a9 f7       	brne	.-22     	; 0xd2 <wait+0xa>
  e8:	08 95       	ret

000000ea <__vector_1>:
  ea:	1f 92       	push	r1
  ec:	0f 92       	push	r0
  ee:	0f b6       	in	r0, 0x3f	; 63
  f0:	0f 92       	push	r0
  f2:	11 24       	eor	r1, r1
  f4:	0b b6       	in	r0, 0x3b	; 59
  f6:	0f 92       	push	r0
  f8:	2f 93       	push	r18
  fa:	3f 93       	push	r19
  fc:	4f 93       	push	r20
  fe:	5f 93       	push	r21
 100:	6f 93       	push	r22
 102:	7f 93       	push	r23
 104:	8f 93       	push	r24
 106:	9f 93       	push	r25
 108:	af 93       	push	r26
 10a:	bf 93       	push	r27
 10c:	ef 93       	push	r30
 10e:	ff 93       	push	r31
 110:	15 ba       	out	0x15, r1	; 21
 112:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 116:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x1>
 11a:	80 38       	cpi	r24, 0x80	; 128
 11c:	91 05       	cpc	r25, r1
 11e:	39 f4       	brne	.+14     	; 0x12e <__vector_1+0x44>
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
 128:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 12c:	06 c0       	rjmp	.+12     	; 0x13a <__vector_1+0x50>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
 136:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 13a:	95 b3       	in	r25, 0x15	; 21
 13c:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 140:	89 2b       	or	r24, r25
 142:	85 bb       	out	0x15, r24	; 21
 144:	8a e0       	ldi	r24, 0x0A	; 10
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	bf df       	rcall	.-130    	; 0xc8 <wait>
 14a:	ff 91       	pop	r31
 14c:	ef 91       	pop	r30
 14e:	bf 91       	pop	r27
 150:	af 91       	pop	r26
 152:	9f 91       	pop	r25
 154:	8f 91       	pop	r24
 156:	7f 91       	pop	r23
 158:	6f 91       	pop	r22
 15a:	5f 91       	pop	r21
 15c:	4f 91       	pop	r20
 15e:	3f 91       	pop	r19
 160:	2f 91       	pop	r18
 162:	0f 90       	pop	r0
 164:	0b be       	out	0x3b, r0	; 59
 166:	0f 90       	pop	r0
 168:	0f be       	out	0x3f, r0	; 63
 16a:	0f 90       	pop	r0
 16c:	1f 90       	pop	r1
 16e:	18 95       	reti

00000170 <__vector_2>:
 170:	1f 92       	push	r1
 172:	0f 92       	push	r0
 174:	0f b6       	in	r0, 0x3f	; 63
 176:	0f 92       	push	r0
 178:	11 24       	eor	r1, r1
 17a:	0b b6       	in	r0, 0x3b	; 59
 17c:	0f 92       	push	r0
 17e:	2f 93       	push	r18
 180:	3f 93       	push	r19
 182:	4f 93       	push	r20
 184:	5f 93       	push	r21
 186:	6f 93       	push	r22
 188:	7f 93       	push	r23
 18a:	8f 93       	push	r24
 18c:	9f 93       	push	r25
 18e:	af 93       	push	r26
 190:	bf 93       	push	r27
 192:	ef 93       	push	r30
 194:	ff 93       	push	r31
 196:	15 ba       	out	0x15, r1	; 21
 198:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 19c:	90 91 19 01 	lds	r25, 0x0119	; 0x800119 <__data_end+0x1>
 1a0:	95 95       	asr	r25
 1a2:	87 95       	ror	r24
 1a4:	00 97       	sbiw	r24, 0x00	; 0
 1a6:	29 f0       	breq	.+10     	; 0x1b2 <__vector_2+0x42>
 1a8:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
 1ac:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1b0:	06 c0       	rjmp	.+12     	; 0x1be <__vector_2+0x4e>
 1b2:	80 e8       	ldi	r24, 0x80	; 128
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	90 93 19 01 	sts	0x0119, r25	; 0x800119 <__data_end+0x1>
 1ba:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
 1be:	95 b3       	in	r25, 0x15	; 21
 1c0:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
 1c4:	89 2b       	or	r24, r25
 1c6:	85 bb       	out	0x15, r24	; 21
 1c8:	8a e0       	ldi	r24, 0x0A	; 10
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	7d df       	rcall	.-262    	; 0xc8 <wait>
 1ce:	ff 91       	pop	r31
 1d0:	ef 91       	pop	r30
 1d2:	bf 91       	pop	r27
 1d4:	af 91       	pop	r26
 1d6:	9f 91       	pop	r25
 1d8:	8f 91       	pop	r24
 1da:	7f 91       	pop	r23
 1dc:	6f 91       	pop	r22
 1de:	5f 91       	pop	r21
 1e0:	4f 91       	pop	r20
 1e2:	3f 91       	pop	r19
 1e4:	2f 91       	pop	r18
 1e6:	0f 90       	pop	r0
 1e8:	0b be       	out	0x3b, r0	; 59
 1ea:	0f 90       	pop	r0
 1ec:	0f be       	out	0x3f, r0	; 63
 1ee:	0f 90       	pop	r0
 1f0:	1f 90       	pop	r1
 1f2:	18 95       	reti

000001f4 <displayloop>:
 1f4:	cf 93       	push	r28
 1f6:	df 93       	push	r29
 1f8:	cd b7       	in	r28, 0x3d	; 61
 1fa:	de b7       	in	r29, 0x3e	; 62
 1fc:	27 97       	sbiw	r28, 0x07	; 7
 1fe:	0f b6       	in	r0, 0x3f	; 63
 200:	f8 94       	cli
 202:	de bf       	out	0x3e, r29	; 62
 204:	0f be       	out	0x3f, r0	; 63
 206:	cd bf       	out	0x3d, r28	; 61
 208:	87 e0       	ldi	r24, 0x07	; 7
 20a:	e0 e0       	ldi	r30, 0x00	; 0
 20c:	f1 e0       	ldi	r31, 0x01	; 1
 20e:	de 01       	movw	r26, r28
 210:	11 96       	adiw	r26, 0x01	; 1
 212:	01 90       	ld	r0, Z+
 214:	0d 92       	st	X+, r0
 216:	8a 95       	dec	r24
 218:	e1 f7       	brne	.-8      	; 0x212 <displayloop+0x1e>
 21a:	00 e0       	ldi	r16, 0x00	; 0
 21c:	10 e0       	ldi	r17, 0x00	; 0
 21e:	12 ba       	out	0x12, r1	; 18
 220:	e1 e0       	ldi	r30, 0x01	; 1
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	ec 0f       	add	r30, r28
 226:	fd 1f       	adc	r31, r29
 228:	e0 0f       	add	r30, r16
 22a:	f1 1f       	adc	r31, r17
 22c:	80 81       	ld	r24, Z
 22e:	82 bb       	out	0x12, r24	; 18
 230:	06 30       	cpi	r16, 0x06	; 6
 232:	11 05       	cpc	r17, r1
 234:	1c f4       	brge	.+6      	; 0x23c <displayloop+0x48>
 236:	0f 5f       	subi	r16, 0xFF	; 255
 238:	1f 4f       	sbci	r17, 0xFF	; 255
 23a:	02 c0       	rjmp	.+4      	; 0x240 <displayloop+0x4c>
 23c:	00 e0       	ldi	r16, 0x00	; 0
 23e:	10 e0       	ldi	r17, 0x00	; 0
 240:	84 ef       	ldi	r24, 0xF4	; 244
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	41 df       	rcall	.-382    	; 0xc8 <wait>
 246:	eb cf       	rjmp	.-42     	; 0x21e <displayloop+0x2a>

00000248 <main>:
notes:			Slow background task after init ISR
Version :    	DMK, Initial code
*******************************************************************/
{
	// Init I/O
	DDRD = 0b11111111;
 248:	8f ef       	ldi	r24, 0xFF	; 255
 24a:	81 bb       	out	0x11, r24	; 17
	
	while (1)
	{
		//PORTD ^= (1<<7);	// Toggle PORTD.7
		//wait( 500 );
		displayloop();
 24c:	d3 df       	rcall	.-90     	; 0x1f4 <displayloop>

0000024e <_exit>:
 24e:	f8 94       	cli

00000250 <__stop_program>:
 250:	ff cf       	rjmp	.-2      	; 0x250 <__stop_program>
